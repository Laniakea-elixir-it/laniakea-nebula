- hosts: localhost
  connection: local
  become: true
  become_user: root
  pre_tasks:
    - name: '[EL] Install Packages for Rocky Linux'
      ansible.builtin.dnf:
        name: ['langpacks-en', 'glibc-all-langpacks', 'epel-release', 'python3-wheel-wheel']
        enablerepo: crb
        state: present
    - name: Install python3-virtualenv
      yum:
        name: python3-virtualenv
        enablerepo: epel-release
        state: present
    - name: '[EL] Install Galaxy Dependencies'
      package:
        name:  ['acl', 'bzip2', 'git', 'make', 'python-psycopg2', 'python3-psycopg2', 'tar', 'pip',  'gcc', 'openssl-devel', 'bzip2-devel', 'libffi-devel', 'zlib-devel', 'xz-devel', 'sqlite-devel', 'wget']
    - name: Install pgdg repository package (RedHat)
      yum:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        disable_gpg_check: True
    - name: '[EL] update ca-certificates'
      command: 'yum update -y ca-certificates'
        #- name: '[EL] Add NGINX repository'
        #  command: 'yum-config-manager --add-repo https://depot.galaxyproject.org/yum/galaxy.repo'
        ##- name: '[EL] Install virtualenv for python3'
        #command: /usr/bin/pip3 install virtualenv
    - name: '[EL] Disable SELinux'
      selinux:
        state: disabled
  roles:
    - galaxyproject.postgresql
    - role: galaxyproject.postgresql_objects
      become: true
      become_user: postgres
    - geerlingguy.pip
    - galaxyproject.tusd
    - galaxyproject.galaxy
    - role: galaxyproject.miniconda
      become: true
      become_user: galaxy
    - galaxyproject.nginx

  post_tasks:

    # Create the /export directory otherwise Galaxy can't start
    # It will be deleted before the end of this playbook as last task
    - name: 'Create /export'
      file:
        state: directory
        path: '{{ export_dir }}'
        owner: galaxy
        group: galaxy
        mode: '0755'

    # Start Galaxy
    - name: galaxyctl update
      command: "{{ galaxy_gravity_command }} -c {{ galaxy_config_file }} update"
    - name: galaxy gravity restart
      command: "{{ galaxy_gravity_command }} -c {{ galaxy_config_file }} graceful"

    # Wait Galaxy and Conda
    # WARNING!!! PLEASE READ BEFORE CHANGE!
    # Galaxy here is configured for listening on TPC 4001 port.
    # It is configured to gunicorn socket file bind with ansible at deploy time.
    - name: 'Wait Galaxy'
      wait_for:
        host: 127.0.0.1
        port: '4001'
        timeout: 15000
    - name: lock-file absent
      file:
        path: /export/tool_deps/conda.lock
        state: absent
